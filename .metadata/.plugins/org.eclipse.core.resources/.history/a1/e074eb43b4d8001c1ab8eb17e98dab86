package org.selenium;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.selenium.pom.base.BaseTest;
import org.selenium.pom.pages.CartPage;
import org.selenium.pom.pages.CheckoutPage;
import org.selenium.pom.pages.HomePage;
import org.selenium.pom.pages.StorePage;
import org.testng.Assert;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class MyFirstTestCase extends BaseTest {

	@Test
	public void guestCheckoutUsingDirectBankTransfer() throws InterruptedException {
//		System.setProperty("webdriver.chrome.driver", "pathHere");

		driver.get("https://askomdch.com");

		HomePage homepage = new HomePage(driver);
		StorePage storePage = homepage.clickStoreMenuLink();

		// thus we are chaining methods , thus creating Builder Pattern
		// storePage.enterTextInSearchFld("Blue").clickSearchBtn();

		// instead of above line we can use [methods that provide based on
		// functionality]
		storePage.search("Blue");

		Assert.assertEquals(storePage.getTitle(), "Search results: “Blue”");
		storePage.getTitle();
		storePage.clickAddToCartBtn("Blue Shoes");
		Thread.sleep(3000);
		CartPage cartPage = storePage.clickViewCart();

		Assert.assertEquals(cartPage.getProductName(), "Blue Shoes");
		CheckoutPage checkoutPage = cartPage.clickCheckoutBtn();

		checkoutPage.setFirstName("demo").setLastname("user").setAddress("San Fransico").setCity("San Fransico")
				.setZipCode("94188").setEmailId("askomdch@gamil.com").setPlaceOrderBtn();
		Thread.sleep(5000);
		Assert.assertEquals(checkoutPage.getNotice(), "Thank you. Your order has been received.");

		

	}

	@Test
	public void loginAndCheckoutUsingDirectBankTransfer() throws InterruptedException {
//		System.setProperty("webdriver.chrome.driver", "pathHere");
		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		driver.get("https://askomdch.com");

		// maximize
		driver.manage().window().maximize();
		driver.findElement(By.cssSelector("#menu-item-1227 > a")).click();
		driver.findElement(By.id("woocommerce-product-search-field-0")).sendKeys("Blue");
		driver.findElement(By.cssSelector("button[value='Search']")).click();

		// validate search functionality in the application using assert statements , if
		// we dont assert if the search functionality is broken we dont know that
		// whether it is working or not
		Assert.assertEquals(
				driver.findElement(By.cssSelector(".woocommerce-products-header__title.page-title")).getText(),
				"Search results: “Blue”");
		driver.findElement(By.cssSelector("a[aria-label='Add “Blue Shoes” to your cart']")).click();
		Thread.sleep(3000);
		driver.findElement(By.cssSelector("a[title='View cart']")).click();

		Assert.assertEquals(driver.findElement(By.cssSelector("td[class='product-name'] a")).getText(), "Blue Shoes");
		driver.findElement(By.cssSelector(".checkout-button")).click();

		// login
		driver.findElement(By.cssSelector(".showlogin")).click();
		driver.findElement(By.id("username")).sendKeys("demouser2804");
		driver.findElement(By.id("password")).sendKeys("demouser2804");
		driver.findElement(By.cssSelector("button[value='Login']")).click();

		driver.findElement(By.id("billing_first_name")).sendKeys("demo");
		driver.findElement(By.id("billing_last_name")).sendKeys("user");
		driver.findElement(By.id("billing_address_1")).sendKeys("San Francisco");

		driver.findElement(By.id("billing_city")).sendKeys("San Francisco");

		driver.findElement(By.id("billing_postcode")).sendKeys("94188");
		driver.findElement(By.id("billing_email")).clear();
		driver.findElement(By.id("billing_email")).sendKeys("askomdch@gmail.com");
		Thread.sleep(3000);
		driver.findElement(By.id("place_order")).click();
		Thread.sleep(3000);
		Assert.assertEquals(driver.findElement(By.cssSelector(".woocommerce-notice")).getText(),
				"Thank you. Your order has been received.");

		driver.quit();
	}
}
